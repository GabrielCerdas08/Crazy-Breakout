#include <iostream>
#include <SFML/Graphics.hpp>

class Button{
public:
    Button () { }
    
    Button (std::string t, sf::Vector2f size, int charSize, sf::Color textColor){
        text.setString(t);
        text.serColor(textColor);
        text.setCharacterSize(charSize);
        
        button.setSize(size);
        button.setFillColor(bgColor);
        
    }
    
    void setFront(sf:Font &font){
        text.setFont(font);
    }
    
    void setBackColor(sf::Color color){
        button.setFillColor(bgColor);
    }
    
    void setTextColor(sf::Color color){
        text.setFillColor(color);
    }
    
    void setPosition(sf::Vector2f pos){
        button.setPosition(pos);
        
        float xPos = (pos.x + button.getGlobalBounds().width / 2) - (text.getLocalBounds().width / 2);
        float yPos = (pos.y + button.getGlobalBounds().height / 2) - (text.getLocalBounds().height / 2);
        text.setPosition(xPos, yPos);
    }
    
    void drawTo(sf::RenderWindow &window){
        window.draw(draw(button));
        window.draw(text);
    }
        
    bool isMouseOver(sf::RenderWindow&window){
        float mouseX = sf::Mouse::getPosition(window).x;
        float mouseY = sf::Mouse::getPosition(window).y;
        
        float btnPosX = button.getPosition().x;
        float btnPosY = button.getPosition().y;
        
        float btnxPosWidth = button.getPosition().x + button.getLocalBounds().widgth;
        float btnyPosHeight = button.getPosition().y + button.getLocalBounds().height;
        
        if (mouseX < btnxPosWidth && mouseX > btnPosX && mouseY < btnyPosHeight && mouseY > btnPosY){
            return true;
        } 
        retur false;
    }
        
    
private:
    sf::RectangleShape button;
    sf::Text text;

}
